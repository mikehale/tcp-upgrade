#!/usr/bin/env ruby

STDOUT.sync = true

require 'socket'
require 'uri'

CRNL = "\r\n"

url = URI.parse(ENV['URL'] || 'http://localhost:5000')

s = TCPSocket.new(url.host, url.port)
s.puts [
        'GET / HTTP/1.1',
        'Connection: Upgrade',
        'Upgrade: tcp',
        "Host: #{url.host}",
       ].join(CRNL) + CRNL * 2

ready = IO.select([s])
readable = ready[0][0]

data = ''
begin
  data << readable.recv_nonblock(1024)
  sleep 0.1
end while !(data =~ /#{CRNL * 2}\Z/)

_, status = data.split(CRNL)[0].split(/\s+/)
status = status.to_i
headers = data.split(CRNL)[1..-1].inject({}){ |m,e| k,v = e.split(/:\s+/); m[k.downcase] = v.downcase.split(','); m}

puts data

if status == 101 &&
    headers['connection'].include?('upgrade') &&
    headers['upgrade'].include?('tcp')

  puts "starting tcp mode"
  s.puts "0"

  loop do
    begin
      ready = IO.select([s], [], [], 1)
      readables = ready[0] if ready

      if readables && readables[0]
        puts counter = s.recv_nonblock(1024).to_i
        s.puts counter + 1
      end
    rescue => e
      puts e.inspect
      s.close
      break
    end

    sleep 1
  end

end

s.close
